package application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import javax.imageio.ImageIO;

import javafx.embed.swing.SwingFXUtils;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.image.WritableImage;
import javafx.scene.input.MouseEvent;
import javafx.scene.paint.Color;

public class MagicFXController implements Initializable{
	
	@FXML
	private Canvas canvas;
	
	public int width;
	public int height;
	
	GraphicsContext gc;
	Image BACKGROUND;
	private WritableImage wImage;
	private File file= new File("res/white.png");
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		width=(int) canvas.getWidth();
		height=(int) canvas.getHeight();
		wImage=new WritableImage(width,height);
		gc = canvas.getGraphicsContext2D();
		gc.setStroke(Color.RED);
        gc.setLineWidth(10);
        
        try {
			BACKGROUND=new Image(new FileInputStream("res/Wizard_Castle.jpg"));
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        gc.drawImage(BACKGROUND, 0, 0);
		
	}
	
	@FXML
	public void onMouseDragged(MouseEvent event) {
		// TODO Autogenerated
		gc.lineTo(event.getX(), event.getY());
		gc.stroke();
		System.out.println("drag");
	}
	
	@FXML
	public void onMousePressed(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("press");
		gc.beginPath();
		gc.moveTo(event.getX(), event.getY());
		gc.stroke();
	}
	
	@FXML
	public void onMouseReleased(MouseEvent event) {
		// TODO Autogenerated
		
		canvas.snapshot(null, wImage);
		try {
			ImageIO.write(SwingFXUtils.fromFXImage(wImage,null), "png", file);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println("release");
		gc.drawImage(BACKGROUND, 0, 0);
		
	}

}

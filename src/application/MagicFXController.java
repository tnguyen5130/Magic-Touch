package application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import javax.imageio.ImageIO;

import com.sun.org.apache.xerces.internal.impl.dv.xs.AnyURIDV;

import javafx.animation.AnimationTimer;
import javafx.embed.swing.SwingFXUtils;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.image.WritableImage;
import javafx.scene.input.MouseEvent;
import javafx.scene.paint.Color;

public class MagicFXController implements Initializable{
	
	public int width;
	public int height;
	
	private GraphicsContext gc1,gc2;
	private Image BACKGROUND;
	private WritableImage wImage;	
	private File file= new File("res/white.png");
	
	@FXML
	private Canvas canvas1;
	@FXML
	private Canvas canvas2;
    @FXML
    private ImageView wizard;
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		width=(int) canvas1.getWidth();
		height=(int) canvas1.getHeight();
		wImage=new WritableImage(width,height);
		
		gc1 = canvas1.getGraphicsContext2D();
		gc1.setStroke(Color.RED);
        gc1.setLineWidth(5);
        
        gc2 = canvas2.getGraphicsContext2D();
		gc2.setStroke(Color.RED);
        gc2.setLineWidth(5);
        
        Matrix.setUpMatrix();
        
        try {
			BACKGROUND=new Image(new FileInputStream("res/background.jpg"));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
        
        gc1.drawImage(BACKGROUND, 0, 0);
     
        AnimationTimer timer = new AnimationTimer() {
			
			@Override
			public void handle(long arg0) {
				wizard.setX(wizard.getX()+2);
				if ( wizard.getX()== 600 ) {
					wizard.setX(0);
				}
			}
		};
		timer.start();
	}
	
	@FXML
	public void onMouseDragged(MouseEvent event) {
		
		gc1.lineTo(event.getX(), event.getY());
		gc1.stroke();
		
		gc2.lineTo(event.getX(), event.getY());
		gc2.stroke();
		
		if((int)event.getX()>20 && (int)event.getX()<width-20 && (int)event.getY()>20 && (int)event.getY()<height-20 ) {
			Matrix.fillOne((int)event.getY(), (int)event.getX());
		}
		
	}
	
	@FXML
	public void onMousePressed(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("press");

		
		gc1.beginPath();
		gc1.moveTo(event.getX(), event.getY());
		gc1.stroke();
	
		
		gc2.beginPath();
		gc2.moveTo(event.getX(), event.getY());
		gc2.stroke();
		
		gc1.drawImage(BACKGROUND, 0, 0);
	}
	
	@FXML
	public void onMouseReleased(MouseEvent event) {
		
		canvas2.snapshot(null, wImage);
		try {
			ImageIO.write(SwingFXUtils.fromFXImage(wImage,null), "png", file);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		Matrix.resizeMatrix();
		Matrix.display();
		Matrix.setUpMatrix();
		
		System.out.println("release");
		gc1.drawImage(BACKGROUND, 0, 0);
		gc2.clearRect(0, 0, canvas2.getWidth(), canvas2.getHeight());
		
	}

}
